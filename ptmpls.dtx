% \iffalse meta-comment
% !TeX encoding = UTF-8
% !TeX program = LuaLaTeX
% The suggestion is LuaLaTeX, while pdfLaTeX or XeLaTeX should also work.
% However, the filename should be strictly ptmpls.dtx.
%<*internal>
\iffalse
%</internal>
%<*readme>
# ptmpls - pppppass' TeX Templates

This repository ptmpls is a macro set about TeX or LaTeX templates made by
  [pppppass](mailto:lzh2016p@pku.edu.cn).
Held on
  [GitHub](https://github.com/pppppass/ptmpls),
this repository consists of
1. Personal macro package `pdef.sty`,
2. Note class `pnote.cls`,
3. PKU-style paper class `pkupaper.cls`,
4. Slide class `pslide.cls`.

Use `lualatex ptmpls.dtx` to extract the package. For detailed usages, refer to
the documentation `ptmpls.pdf`.
%</readme>
%<*internal>
\fi
%</internal>
%<*install>
%% ptmpls.ins - Installation Batchfile

\begingroup
\input docstrip.tex
\askforoverwritefalse
\preamble
ptmpls - pppppass' TeX Templates

By pppppass <lzh2016p@pku.edu.cn>

This macro set is held on
  http://www.github.com/pppppass/ptmpls
and released under the LaTeX Project Public License v1.3c or later, see
  http://www.latex-project.org/lppl.txt
and the postamble.

\endpreamble
\postamble
This work may be distributed and/or modified under the conditions of the LaTeX
Project Public License, either version 1.3 of this license or (at your option)
any later version. The latest version of this license is in
  http://www.latex-project.org/lppl.txt,
and version 1.3 or later is part of all distributions of LaTeX
version 2005/12/01 or later.

This work has the LPPL maintenance status "maintained".

The Current Maintainer of this work is pppppass <lzh2016p@pku.edu.cn>.

By "this work", it is refered to the file
  ptmpls.dtx,
and the derived files
  ptmpls.pdf,
  ptmpls.ins,
  pdef.sty,
  pnote.cls,
  pslide.cls.
\endpostamble
\usedir{tex/latex/ptmpls}
\generate{
  \file{pdef.sty}{\from{ptmpls.dtx}{pdef}}
}
\usedir{tex/latex/ptmpls}
\generate{
  \file{pnote.cls}{\from{ptmpls.dtx}{pnote}}
}
\usedir{tex/latex/ptmpls}
\generate{
  \file{pslide.cls}{\from{ptmpls.dtx}{pslide}}
}
%</install>
%<install>\endbatchfile
%<*internal>
\usedir{source/latex/ptmpls}
\generate{
  \file{ptmpls.ins}{\from{ptmpls.dtx}{install}}
}
\nopreamble\nopostamble
\usedir{doc/latex/ptmpls}
\generate{
  \file{Readme.md}{\from{ptmpls.dtx}{readme}}
}
\endgroup
%</internal>
%<*internal>
\iffalse
%</internal>
%<*pdef>
%% pdef.sty - Personal macro package

%</pdef>
%<*pnote>
%% pnote.cls - Note class

%</pnote>
%<*internal>
\fi
%</internal>
%<*driver>
\documentclass[doc]{pnote}
\usepackage{pdef}
\usepackage[numbered]{hypdoc}
\EnableCrossrefs
\CodelineIndex
\RecordChanges
\begin{document}
  \DocInput{ptmpls.dtx}
\end{document}
%</driver>
% \fi
%
% \GetFileInfo{pdef.sty}
%
% \title{\textsf{ptmpls} --- pppppass' Personal \TeX{} Templates}
%
% \author{^^A
%   pppppass^^A
%   \thanks{E-mail: \href{mailto:lzh2016p@pku.edu.cn}{\texttt{lzh2016p@pku.edu.cn}}}^^A
% }
%
% \date{
%   \begin{tabular}{c}
%     July 11, 2024 \\
%     Version: \filedate, \fileversion
%   \end{tabular}
% }
%
% \maketitle
%
% \changes{v1.5.0}{2024/07/11}{
%   Clean up language.
% }
%
% \changes{v1.4.2}{2020/03/14}{
%   Macros to visualize bounding boxes.
% }
% \changes{v1.4.1}{2020/02/22}{
%   Macros for adjustbale fixed-size brackets.
% }
% \changes{v1.4.0}{2019/10/06}{
%   Macros for fixed-size brackets.
% }
%
% \changes{v1.3.0}{2019/04/10}{
%   Merge \text{pkuslide.cls} into this repository as \text{pslide.cls}.
% }
%
% \changes{v1.2.1}{2018/10/29}{
%   Restructure the documentation.
% }
% \changes{v1.2.0}{2018/08/06}{
%   Merge files into \texttt{ptmpls.dtx}.
% }
%
% \changes{v1.1.1}{2018/06/19}{
%   Macros for footnotes in \texttt{pkupaper.cls}.
% }
% \changes{v1.1.0}{2018/05/16}{
%   Option \texttt{nochinese} in \texttt{pkupaper.cls}.
% }
%
% \changes{v1.0.4}{2018/04/30}{
%   Hot fix for \TeX{} Live 2017.
% }
% \changes{v1.0.3}{2018/04/17}{
%   Macros for symbols.
% }
% \changes{v1.0.2}{2018/03/22}{
%   Fix \texttt{quoteslide} environment. Restructure the files.
% }
% \changes{v1.0.1}{2018/01/20}{
%   Update version header.
% }
% \changes{v1.0.0}{2018/10/25}{
%   First release.
% }
%
% \tableofcontents
%
% \section{Introduction}
%
% This repository \textsf{ptmpls} is a macro set of TeX / LaTeX templates
% made by
%   \href{mailto:lzh2016p@pku.edu.cn}{pppppass}.
% Held on
%   \href{https://github.com/pppppass/ptmpls}{GitHub},
% this repository consists of
% \begin{enumerate}
% \item Personal macro package \verb"pdef.sty";
% \item Note class \verb"pnote.cls";
% \item PKU-style paper class \verb"pkupaper.cls";
% \item Slide class \verb"pslide.cls".
% \end{enumerate}
%
% This repository is a derived work from some packages under LPPL (LaTeX
% Project Public License). To be concrete, this repository contains codes derived
% from
%   \href{https://ctan.org/pkg/yhmath}{\textsf{yhmath}}
% and
%   \href{https://ctan.org/pkg/cbgreek-complete}{\textsf{cbgreek}}.
% See comments on source codes and the preamble and postamble part of extracted
% files for details.
%
% \section{Usage}
%
% \subsection{Extract manually}
%
% There is one single main file for this repository: \verb"ptmpls.dtx". To
% extract the style files and the class files, \LaTeX{} it like
%\begin{verbatim}
%lualatex ptmpls.dtx
%\end{verbatim}
% \emph{Note that the files to be extracted, including} \verb"pdef.sty"
% \emph{and many others, will be overwritten!}
%
% To compile the documentation, run
%\begin{verbatim}
%lualatex ptmpls.dtx
%\end{verbatim}
% To build the index then, run
%\begin{verbatim}
%makeindex -s gind.ist ptmpls.idx
%makeindex -s gglo.ist -o ptmpls.gls ptmpls.glo
%\end{verbatim}
%
% To use the package, put the files of interest into the working folder. Then
% macros like
%\begin{verbatim}
%\usepackage{pdef}
%\end{verbatim}
% or
%\begin{verbatim}
%\documentclass{pnote}
%\end{verbatim}
% should work in the usual way.
%
% \subsection{Extract with \texttt{make} utilities}
%
% A faster way to extract the files is to use
%\begin{verbatim}
%make
%\end{verbatim}
% or
%\begin{verbatim}
%make all
%\end{verbatim}
%
% \subsection{Clone from the GitHub repository}
% 
% After cloning from GitHub by
%\begin{verbatim}
%git clone git@github.com:pppppass/ptmpls
%\end{verbatim}
% or
%\begin{verbatim}
%git submodule init git@github.com:ppppass/ptmpls
%\end{verbatim}
% remember to execute `make` to get the files. There are archives of previous
% releases at
% \href{https://github.com/pppppass/textmpls/releases}{the release page}.
%
% \section{Personal macro package \texttt{pdef.sty}}
%
% Guard.
%    \begin{macrocode}
%<*pdef>
%    \end{macrocode}
%
%
% Provide the package itself.
%    \begin{macrocode}
\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{pdef}[2024/07/11 1.5.0 Personal macro package]
%    \end{macrocode}
%
% Define functional macros.
%    \begin{macrocode}
\def\pdef@temp@empty{
  \let\pdef@temp@var=\undefined
}
\def\pdef@temp@fill{
  \def\pdef@temp@var{\relax}
}
\def\ifpdef@temp{
  \ifcsname pdef@temp@var\endcsname
}
\def\pdef@opt@dec#1{
  \DeclareOption{#1}{
    \expandafter\def\csname pdef@opt@name@#1\endcsname{\relax}
  }
  \expandafter\def\csname ifpdef@opt@#1\endcsname{
    \ifcsname pdef@opt@name@#1\endcsname
  }
  \expandafter\def\csname pdef@test@#1\endcsname{
    \ifcsname pdef@opt@name@#1\endcsname\pdef@temp@fill\fi
  }
}

\pdef@opt@dec{yhaccent}
\pdef@opt@dec{cgu}
\pdef@opt@dec{cmrgreekup}
\pdef@opt@dec{cgunfss}
\pdef@opt@dec{safebm}
\pdef@opt@dec{nosidefault}
\pdef@opt@dec{nolstdefault}
\pdef@opt@dec{nomacro}
\pdef@opt@dec{paper}

\ProcessOptions\relax

%    \end{macrocode}
%
% \DescribeMacro{\setanno}
% \DescribeMacro{\showanno}
% \DescribeMacro{\hideanno}
% \DescribeMacro{\ifanno*ANNO*}
% \changes{v1.4.0}{2019/10/06}{
%   Annotations with switches
% }
% Define macros for annotation. Examplar usage is 
%\begin{verbatim}
%\setanno{draft}
%\showanno{draft}
%{\ifannodraft\color{red}This is annotation.\fi}
%\end{verbatim}
%    \begin{macrocode}
\def\setanno#1{
  \expandafter\def\csname ifanno#1\endcsname{
    \ifcsname pdef@anno@name@#1\endcsname
  }
}
\def\showanno#1{
  \expandafter\def\csname pdef@anno@name@#1\endcsname{\relax}
}
\def\hideanno#1{
  \expandafter\let\csname pdef@anno@name@#1\endcsname=\undefined
}

%    \end{macrocode}

% Require basic packages.
%    \begin{macrocode}
\RequirePackage{amsmath}
\RequirePackage{amsfonts}
\RequirePackage{amssymb}
\RequirePackage{amsxtra}
\RequirePackage{mathtools}

%    \end{macrocode}
%
% Increase matrix column capacity.
%    \begin{macrocode}
\setcounter{MaxMatrixCols}{30}

%    \end{macrocode}
%
% \DescribeMacro{yhaccent}
% \DescribeMacro{\widetilde}
% \DescribeMacro{\widehat}
% \DescribeMacro{\widetriangle}
% \DescribeMacro{\wideparen}
% Provide wide mathematical accents from the \textsf{yhmath} package. This snippet
% is a modification of \textsf{yhmath.sty}.
%    \begin{macrocode}
\ifpdef@opt@yhaccent
  \DeclareSymbolFont{largesymbolsyhmath}{OMX}{yhex}{m}{n}
  \DeclareMathAccent{\widetilde}{\mathord}{largesymbolsyhmath}{"65}
  \DeclareMathAccent{\widehat}{\mathord}{largesymbolsyhmath}{"62}
  \DeclareMathAccent{\widetriangle}{\mathord}{largesymbolsyhmath}{"E6}
  \DeclareMathAccent{\wideparen}{\mathord}{largesymbolsyhmath}{"F3}
\fi

%    \end{macrocode}
%
% \DescribeMacro{cgu}
% \changes{v1.2.1}{2018/10/04}{
%   Upright Greek letters
% }
% \DescribeMacro{cmrgreekup}
% \DescribeMacro{\LETTERup}
% Introduce upright Greek letters from CB Greek fonts as from the
% \textsf{cbgreek} package. This snippet is a modification of
% \verb"cbgreek.sty"; refer to their documentation of the package for the
% glyph table. The CB Greek fonts suit better paired with Computer Modern
% family, while Adobe Symbol from package \textsf{upgreek}
% (with option \verb"Symbolsmallscale") looks better paired with Time New Roman
% family. The new macros are named \verb"\LETTERup" here instead of
% \verb"\upLETTER" in \textsf{upgreek} to avoid conflicts. Use \verb"bm" for
% boldface.
%    \begin{macrocode}
\pdef@temp@empty
\pdef@test@cgu
\pdef@test@cmrgreekup
\ifpdef@temp
  \RequirePackage[LGR,T1]{fontenc}
  \DeclareSymbolFont{greekupcbgreek}{LGR}{cmr}{m}{n}
  \SetSymbolFont{greekupcbgreek}{bold}{LGR}{cmr}{bx}{n}
  \DeclareMathSymbol{\alphaup}{\mathord}{greekupcbgreek}{97}
  \DeclareMathSymbol{\betaup}{\mathord}{greekupcbgreek}{98}
  \DeclareMathSymbol{\gammaup}{\mathord}{greekupcbgreek}{103}
  \DeclareMathSymbol{\deltaup}{\mathord}{greekupcbgreek}{100}
  \DeclareMathSymbol{\epsilonup}{\mathord}{greekupcbgreek}{101}
  \DeclareMathSymbol{\zetaup}{\mathord}{greekupcbgreek}{122}
  \DeclareMathSymbol{\etaup}{\mathord}{greekupcbgreek}{104}
  \DeclareMathSymbol{\thetaup}{\mathord}{greekupcbgreek}{106}
  \DeclareMathSymbol{\iotaup}{\mathord}{greekupcbgreek}{105}
  \DeclareMathSymbol{\kappaup}{\mathord}{greekupcbgreek}{107}
  \DeclareMathSymbol{\lambdaup}{\mathord}{greekupcbgreek}{108}
  \DeclareMathSymbol{\muup}{\mathord}{greekupcbgreek}{109}
  \DeclareMathSymbol{\nuup}{\mathord}{greekupcbgreek}{110}
  \DeclareMathSymbol{\xiup}{\mathord}{greekupcbgreek}{120}
  \DeclareMathSymbol{\piup}{\mathord}{greekupcbgreek}{112}
  \DeclareMathSymbol{\rhoup}{\mathord}{greekupcbgreek}{114}
  \DeclareMathSymbol{\sigmaup}{\mathord}{greekupcbgreek}{115}
  \DeclareMathSymbol{\tauup}{\mathord}{greekupcbgreek}{116}
  \DeclareMathSymbol{\upsilonup}{\mathord}{greekupcbgreek}{117}
  \DeclareMathSymbol{\phiup}{\mathord}{greekupcbgreek}{102}
  \DeclareMathSymbol{\chiup}{\mathord}{greekupcbgreek}{113}
  \DeclareMathSymbol{\psiup}{\mathord}{greekupcbgreek}{121}
  \DeclareMathSymbol{\omegaup}{\mathord}{greekupcbgreek}{119}
\fi

%    \end{macrocode}
%
% \DescribeMacro{cgunfss}
% \changes{v1.2.1}{2018/10/04}{
%   NFSS Greek fonts
% }
% \DescribeMacro{\mathrmup}
% \DescribeMacro{\mathbfup}
% \DescribeMacro{\mathsfup}
% \DescribeMacro{\mathitup}
% \DescribeMacro{\mathttup}
% \DescribeMacro{\mathslup}
% Introduce NFSS fonts for Greek letters. For example, use \verb"\mathbfup{a}"
% to get the boldface upright $\alpha$.
%    \begin{macrocode}
\ifpdef@opt@cgunfss
  \RequirePackage[LGR,T1]{fontenc}
  \DeclareMathAlphabet{\mathrmup}{LGR}{cmr}{m}{n}
  \DeclareMathAlphabet{\mathbfup}{LGR}{cmr}{bx}{n}
  \DeclareMathAlphabet{\mathsfup}{LGR}{cmss}{m}{n}
  \DeclareMathAlphabet{\mathitup}{LGR}{cmr}{m}{it}
  \DeclareMathAlphabet{\mathttup}{LGR}{cmtt}{m}{n}
  \DeclareMathAlphabet{\mathttup}{LGR}{cmtt}{m}{n}
  \DeclareMathAlphabet{\mathslup}{LGR}{cmr}{m}{sl}
\fi

%    \end{macrocode}
%
% \DescribeMacro{safebm}
% Set \verb"\hmmax" and \verb"\bmmax" in order to reduce the number of symbol
% fonts in use while paying some efficiency in exachange. If this option is on,
% try to postpone this package until all packages about symbols and fonts have
% been loaded.
%    \begin{macrocode}
\ifpdef@opt@safebm
  \newcommand{\hmmax}{0}
  \newcommand{\bmmax}{0}
  \RequirePackage{bm}
\fi

%    \end{macrocode}
%
% \DescribeMacro{nosidefault}
% Default settings for the package \textsf{siunitx}.
%    \begin{macrocode}
\ifpdef@opt@nosidefault\else
  \ifdefined\SI
    \let\Si\si
    \let\si\relax
    \sisetup{
      input-symbols = \pi\spi\dots\cdots,
      binary-units = true,
    }
  \fi
\fi

%    \end{macrocode}
%
% Default settings for the package \textsf{listings}.
% \DescribeMacro{nolstdefault}
%    \begin{macrocode}
\ifpdef@opt@nolstdefault\else
  \ifdefined\lstset
    \lstset{%
      basicstyle=\ttfamily,%
      keywordstyle=\ttfamily\color{blue!75!black},%
      stringstyle=\ttfamily\color{red!75!black},%
      flexiblecolumns%
    }
  \fi
\fi

%    \end{macrocode}
%
%
% \DescribeMacro{\sDefine macros forhowdraftbox}
% \changes{v1.4.2}{2020/03/14}{
%   Bounding box indicators
% }
% Show the bounding box for artitrary content. Use
%\begin{verbatim}
%\def\showdraftbox\relax{}
%\end{verbatim}
% to set it on, and include the content as in
%\begin{verbatim}
%\draftbox{Content}
%\end{verbatim}
% \DescribeMacro{nolstdefault}
%    \begin{macrocode}
\def\draftbox#1{%
  \ifdefined\showdraftbox%
    {\setlength\fboxsep{0pt}\fbox{#1}}%
  \else%
    #1%
  \fi%
}

%    \end{macrocode}
%
% \DescribeMacro{\showtikzbox}
% \changes{v1.4.2}{2020/03/14}{
%   TikZ bounding box indicators
% }
% Show the bounding box for TikZ pictures. Use
%\begin{verbatim}
%\def\showtikzbox\relax{}
%\end{verbatim}
% to set it on, and add
%\begin{verbatim}
%\showtikzbox
%\end{verbatim}
% to particular TikZ pictures.
% \DescribeMacro{nolstdefault}
%    \begin{macrocode}
\def\tikzbox{
  \ifdefined\showtikzbox
    \draw
      (current bounding box.south west)
      rectangle
      (current bounding box.north east);
  \fi
}

%    \end{macrocode}
%
% \DescribeMacro{nomacro}
% \DescribeMacro{\rbr}
% \DescribeMacro{\sbr}
% \DescribeMacro{\cbr}
% \DescribeMacro{\pbr}
% \DescribeMacro{\fbr}
% \DescribeMacro{\gbr}
% Define macros for paired brackets so that brackets have consistent semantics
% and syntaxes. The option \verb"nomacro" disables these definitions.
%    \begin{macrocode}
\ifpdef@opt@nomacro\else
  \newcommand{\rbr}[1]{\left( #1 \right)}
  \newcommand{\sbr}[1]{\left[ #1 \right]}
  \newcommand{\cbr}[1]{\left\{ #1 \right\}}
  \newcommand{\pbr}[1]{\left\langle #1 \right\rangle}
  \newcommand{\fbr}[1]{\left\lfloor #1 \right\rfloor}
  \newcommand{\gbr}[1]{\left\lceil #1 \right\rceil}

%    \end{macrocode}
%
% \DescribeMacro{\frbr}
% \DescribeMacro{\fsbr}
% \DescribeMacro{\fcbr}
% \DescribeMacro{\fpbr}
% \DescribeMacro{\ffbr}
% \DescribeMacro{\fgbr}
% \changes{v1.4.0}{2019/10/06}{
%   Fixed-size brackets
% }
% Define macros for fixed-size brackets which are not delimiters. Here
% \texttt{f} stands for ``fixed''.
%    \begin{macrocode}
  \newcommand{\frbr}[1]{( #1 )}
  \newcommand{\fsbr}[1]{[ #1 ]}
  \newcommand{\fcbr}[1]{\{ #1 \}}
  \newcommand{\fpbr}[1]{\langle #1 \rangle}
  \newcommand{\ffbr}[1]{\lfloor #1 \rfloor}
  \newcommand{\fgbr}[1]{\lceil #1 \rceil}

%    \end{macrocode}
%
% \DescribeMacro{\abs}
% \DescribeMacro{\norm}
% Define macros for norm-like brackets.
%    \begin{macrocode}
  \newcommand{\abs}[1]{\left| #1 \right|}
  \newcommand{\norm}[1]{\left\| #1 \right\|}

%    \end{macrocode}
%
% \DescribeMacro{\frbr}
% \DescribeMacro{\fsbr}
% \DescribeMacro{\fcbr}
% \DescribeMacro{\fpbr}
% \DescribeMacro{\ffbr}
% \DescribeMacro{\fgbr}
% \changes{v1.4.1}{2020/02/22}{
%   Adjustable fixed-size brackets
% }
% Define macros for adjustable fixed-size brackets which are not delimiters.
% Here \texttt{b} stands for  ``big''.
%    \begin{macrocode}
  \newcommand{\brbr}[2]{#1( #2 #1)}
  \newcommand{\bsbr}[2]{#1[ #2 #1]}
  \newcommand{\bcbr}[2]{#1\{ #2 #1\}}
  \newcommand{\bpbr}[2]{#1\langle #2 #1\rangle}
  \newcommand{\bfbr}[2]{#1\lfloor #2 #1\rfloor}
  \newcommand{\bgbr}[2]{#1\lceil #2 #1\rceil}
  \newcommand{\babs}[2]{#1| #2 #1|}
  \newcommand{\bnorm}[2]{#1\| #2 #1\|}

%    \end{macrocode}
%
% \DescribeMacro{\mvert}
% \DescribeMacro{\mnorm}
% Define macros for delimiter bars to be used in a pair of delimiter brackets.
%    \begin{macrocode}
  \newcommand{\mvert}{\middle\vert}
  \newcommand{\mnorm}{\middle\|}

%    \end{macrocode}
%
% \DescribeMacro{\rsbr}
% \DescribeMacro{\srbr}
% \DescribeMacro{\siobr}
% \DescribeMacro{\soibr}
% \DescribeMacro{\soobr}
% Define brackets for intervals.
%    \begin{macrocode}
  \newcommand{\rsbr}[1]{\left( #1 \right]}
  \newcommand{\srbr}[1]{\left[ #1 \right)}
  \newcommand{\siobr}[1]{\left[ #1 \right[}
  \newcommand{\soibr}[1]{\left] #1 \right]}
  \newcommand{\soobr}[1]{\left] #1 \right[}

%    \end{macrocode}
%
% \DescribeMacro{\mnbr}
% \DescribeMacro{\mrbr}
% \DescribeMacro{\msbr}
% \DescribeMacro{\mcbr}
% \DescribeMacro{\mabr}
% \DescribeMacro{\mmbr}
% \DescribeMacro{\mpbr}
% \changes{v1.2.1}{2018/08/23}{
%   Matrix brackets.
% }
% Define brackets for matrices.
%    \begin{macrocode}
  \newcommand{\mnbr}[1]{{\begin{matrix} #1 \end{matrix}}}
  \newcommand{\mrbr}[1]{{\begin{pmatrix} #1 \end{pmatrix}}}
  \newcommand{\msbr}[1]{{\begin{bmatrix} #1 \end{bmatrix}}}
  \newcommand{\mcbr}[1]{{\begin{Bmatrix} #1 \end{Bmatrix}}}
  \newcommand{\mabr}[1]{{\begin{vmatrix} #1 \end{vmatrix}}}
  \newcommand{\mmbr}[1]{{\begin{Vmatrix} #1 \end{Vmatrix}}}
  \newcommand{\mpbr}[1]{{\left<\begin{matrix} #1 \end{matrix}\right>}}

%    \end{macrocode}
%
% \DescribeMacro{\bra}
% \DescribeMacro{\ket}
% \DescribeMacro{\bk}
% \DescribeMacro{\bmk}
% Define macros for brackets in physics.
%    \begin{macrocode}
  \newcommand{\bra}[1]{\left< #1 \right\vert}
  \newcommand{\ket}[1]{\left\vert #1 \right>}
  \newcommand{\bk}[2]{\left< #1 \middle\vert #2 \right>}
  \newcommand{\bmk}[3]{\left< #1 \middle\vert #2 \middle\vert #3 \right>}

%    \end{macrocode}
%
% \DescribeMacro{\bfrac}
% \DescribeMacro{\nvbr}
% Define macros for miscellaneous brackets.
%    \begin{macrocode}
  \newcommand{\bfrac}[2]{\left. #1 \middle/ #2 \right.}
  \newcommand{\nvbr}[1]{\left. #1 \right\rvert}

%    \end{macrocode}
%
% \DescribeMacro{\narr}
% \DescribeMacro{\sarr}
% Define macros for array environments.
%    \begin{macrocode}
  \newcommand{\narr}[2]{{\begin{array}{#1} #2 \end{array}}}
  \newcommand{\sarr}[2]{{\begin{subarray}{#1} #2 \end{subarray}}}

%    \end{macrocode}
%
% \DescribeMacro{\sd}
% \DescribeMacro{\pd}
% \changes{v1.2.1}{2018/09/19}{
%   Subscripted differential operators
% }
% \DescribeMacro{\pdl}
% \DescribeMacro{\ud}
% Define macros for differential operators.
%    \begin{macrocode}
  \newcommand{\sd}[1][]{\mathop{\mathrm{d}^{#1} \!}}
  \newcommand{\pd}[1][]{\mathop{\partial^{#1} \!}}
  \newcommand{\pdl}[2][]{\mathop{\partial_{#2}^{#1} \!}}
  \newcommand{\ud}[1][]{\mathop{\mathrm{D}^{#1} \!}}

%    \end{macrocode}
%
% \DescribeMacro{\se}
% \DescribeMacro{\si}
% \DescribeMacro{\sj}
% \DescribeMacro{\sk}
% \DescribeMacro{\spi}
% Define macros for constants.
%    \begin{macrocode}
  \newcommand{\se}{\mathrm{e}}
  \newcommand{\si}{\mathrm{i}}
  \newcommand{\sj}{\mathrm{j}}
  \newcommand{\sk}{\mathrm{k}}
  \ifdefined\piup
    \newcommand{\spi}{\piup}
  \else
    \ifdefined\uppi
      \newcommand{\spi}{\uppi}
    \else
      \newcommand{\spi}{\pi}
    \fi
  \fi

%    \end{macrocode}
%
% \DescribeMacro{\ptrel}
% \DescribeMacro{\ptbin}
% \DescribeMacro{\ptop}
% Define macros for phantom whitespaces. This is useful to typeset aligned
% multi-line equations, where the first equality is left out for indentation.
%    \begin{macrocode}
  \newcommand{\ptrel}[1]{\mathrel{\phantom{#1}}}
  \newcommand{\ptbin}[1]{\mathbin{\phantom{#1}}}
  \newcommand{\ptop}[1]{\mathop{\phantom{#1}}}
\fi

%    \end{macrocode}
%
% \DescribeMacro{nopaper}
% The \textsf{ntheorem} and \textsf{enumitem} packages are useful for paper
% writing. Pass \verb"nopaper" option to suppress their introduction.
%    \begin{macrocode}
\ifpdef@opt@paper
  \RequirePackage{ntheorem}
  \RequirePackage{enumitem}

%    \end{macrocode}
%
% \DescribeEnv{partlist}
% \DescribeEnv{partpartlist}
% \DescribeEnv{partpartpartlist}
% Define environments for indented lists.
%    \begin{macrocode}
  \newenvironment{partlist}[1][]
    {\begin{enumerate}[
      itemsep=0pt, label=(\arabic*), wide,
      labelindent=\parindent, listparindent=\parindent, #1%
    ]}
    {\end{enumerate}}
  \newenvironment{partpartlist}[1][]
    {\begin{enumerate}[
      itemsep=0pt, label=(\roman*), wide,
      labelindent=\parindent, listparindent=\parindent, #1%
    ]}
    {\end{enumerate}}
  \newenvironment{partpartpartlist}[1][]
    {\begin{enumerate}[
      itemsep=0pt, label=\alph*., wide,
      labelindent=\parindent, listparindent=\parindent, #1%
    ]}
    {\end{enumerate}}

%    \end{macrocode}
%
% Define theorem styles without numbering as extensions of \textsf{theorem}.
% See the \textsf{ntheorem} package for details.
%    \begin{macrocode}
  \newtheoremstyle{nonameplain}
  {\item[%
    \theorem@headerfont%
    \hskip\labelsep{##2}%
    \theorem@separator%
  ]}
  {\item[%
    \theorem@headerfont%
    \hskip \labelsep{##2}\ (##3)%
    \theorem@separator%
  ]}
  \newtheoremstyle{nonameindent}
  {\item[%
    \theorem@headerfont%
    \hskip\labelsep\hspace{\parindent}##2%
    \theorem@separator%
  ]}
  {\item[%
    \theorem@headerfont%
    \hskip \labelsep\hspace{\parindent}##2\ (##3)%
    \theorem@separator%
  ]}
  \newtheoremstyle{nonumberindent}
	{\item[%
    \theorem@headerfont%
    \hskip\labelsep\hspace{\parindent}##1%
    \theorem@separator%
  ]}
  {\item[%
    \theorem@headerfont%
    \hskip \labelsep\hspace{\parindent}##1\ (##3)%
    \theorem@separator%
  ]}
\fi

%    \end{macrocode}
%
% Guard.
%    \begin{macrocode}
%</pdef>
%    \end{macrocode}
%
% \section{Note class \texttt{pnote.cls}}
%
% Guard.
%    \begin{macrocode}
%<*pnote>
%    \end{macrocode}
%
%
% Provide the document class itself.
%    \begin{macrocode}
\NeedsTeXFormat{LaTeX2e}
\ProvidesClass{pnote}[2024/07/11 1.5.0 Note class]

%    \end{macrocode}
%
% Declare options.
%    \begin{macrocode}
\def\pnote@temp@empty{
  \let\pnote@temp@var=\undefined
}
\def\pnote@temp@fill{
  \def\pnote@temp@var{\relax}
}
\def\ifpnote@temp{
  \ifcsname pnote@temp@var\endcsname
}
\def\pnote@opt@dec#1{
  \DeclareOption{#1}{
      \expandafter\def\csname pnote@opt@name@#1\endcsname{\relax}
  }
  \expandafter\def\csname ifpnote@opt@#1\endcsname{
      \expandafter\ifcsname pnote@opt@name@#1\endcsname
  }
  \expandafter\def\csname pnote@test@#1\endcsname{
    \ifcsname pnote@opt@name@#1\endcsname\pnote@temp@fill\fi
  }
  \expandafter\def\csname pnote@ntest@#1\endcsname{
    \ifcsname pnote@opt@name@#1\endcsname\pnote@temp@empty\fi
  }
}

\pnote@opt@dec{doc}
\pnote@opt@dec{english}
\pnote@opt@dec{nochinese}

\ProcessOptions\relax

%    \end{macrocode}
%
% \DescribeMacro{doc}
% \changes{v1.2.1}{2018/10/29}{
%   Option \texttt{doc}
% }
% \DescribeMacro{english}
% \DescribeMacro{nochinese}
% Load classes and pass options. By default, Chinese typesetting environment
% is used. Use \verb"english" to change such localization, or use
% \verb"nochinese" to suppress the package \textsf{ctex}. The option
% \verb"ltxdoc" is only for internal use.
%    \begin{macrocode}
\ifpnote@opt@english
  \PassOptionsToClass{scheme=plain}{ctexart}
\fi

\ifpnote@opt@doc
  \LoadClass[UTF8]{ltxdoc}
\fi

\pnote@temp@empty
\pnote@test@nochinese
\pnote@ntest@doc
\ifpnote@temp
  \LoadClass[UTF8, 12pt]{article}
\fi

\pnote@temp@fill
\pnote@ntest@nochinese
\pnote@ntest@doc
\ifpnote@temp  
  \LoadClass[UTF8, zihao=-4]{ctexart}
\fi

%    \end{macrocode}
%
% Load packages.
%    \begin{macrocode}
\RequirePackage{amsmath}
\RequirePackage{geometry}
\RequirePackage{tocbibind}

%    \end{macrocode}
%
% Set the page layout.
%    \begin{macrocode}
\geometry{a4paper, top=1in, bottom=1in, left=1.25in, right=1.25in}

%    \end{macrocode}
%
% Set the page style.
%    \begin{macrocode}
\pagestyle{plain}

%    \end{macrocode}
%
% Set the default linespread.
%    \begin{macrocode}
\linespread{1.2}\selectfont

%    \end{macrocode}
%
% Set the default line skip.
%    \begin{macrocode}
\setlength\lineskiplimit{3pt}
\setlength\lineskip{3pt}

%    \end{macrocode}
%
% Allow multiple-page equations.
%    \begin{macrocode}
\allowdisplaybreaks

%    \end{macrocode}
%
% Guard.
%    \begin{macrocode}
%</pnote>
%    \end{macrocode}
%
% \section{Slide class \texttt{pslide.cls}}
%
% Guard.
%    \begin{macrocode}
%<*pslide>
%    \end{macrocode}
%
%
% Provide the document class itself.
%    \begin{macrocode}
\NeedsTeXFormat{LaTeX2e}
\ProvidesClass{pslide}[2024/07/11 1.5.0 Slide class]

%    \end{macrocode}
%
% Declare options.
%    \begin{macrocode}
\def\pslide@temp@empty{
  \let\pslide@temp@var=\undefined
}
\def\pslide@temp@fill{
  \def\pslide@temp@var{\relax}
}
\def\ifpslide@temp{
  \ifcsname pslide@temp@var\endcsname
}
\def\pslide@opt@dec#1{
  \DeclareOption{#1}{
      \expandafter\def\csname pslide@opt@name@#1\endcsname{\relax}
  }
  \expandafter\def\csname ifpslide@opt@#1\endcsname{
      \expandafter\ifcsname pslide@opt@name@#1\endcsname
  }
  \expandafter\def\csname pslide@test@#1\endcsname{
    \ifcsname pslide@opt@name@#1\endcsname\pslide@temp@fill\fi
  }
  \expandafter\def\csname pslide@ntest@#1\endcsname{
    \ifcsname pslide@opt@name@#1\endcsname\pslide@temp@empty\fi
  }
}

\pslide@opt@dec{english}
\pslide@opt@dec{nochinese}

\ProcessOptions\relax

%    \end{macrocode}
%
% \DescribeMacro{english}
% \DescribeMacro{nochinese}
% Similar to \verb"pnote", the two options \verb"english" and \verb"nochinese"
% invoke different localization settings.
%    \begin{macrocode}

\ifpslide@opt@nochinese
\LoadClass[UTF8]{beamer}
\fi

\pslide@temp@empty
\pslide@ntest@nochinese
\pslide@test@english
\ifpslide@temp
\PassOptionsToClass{scheme=plain}{ctexbeamer}
\fi

\pslide@temp@empty
\pslide@ntest@nochinese
\ifpslide@temp
\LoadClass[UTF8]{ctexbeamer}
\fi

%    \end{macrocode}
%
% Set themes.
%    \begin{macrocode}
\useoutertheme{infolines}
\useinnertheme{rectangles}

%    \end{macrocode}
%
% Set colors.
%    \begin{macrocode}
\definecolor{pkured}{HTML}{94070A}
\colorlet{pkuredgray}{pkured!75!red}
\colorlet{pkuredblack}{pkured!50!black}
\definecolor{nonpkublue}{HTML}{03356B}
\definecolor{nonpkugreen}{HTML}{025709}

\setbeamercolor{structure}{
  fg=pkured
}

\setbeamercolor{normal text}{
  fg=black,
  bg=white
}
\setbeamercolor{alerted text}{
  fg=nonpkugreen!67!yellow,
  bg=white
}
\setbeamercolor{example text}{
  fg=nonpkublue,
  bg=white
}

\setbeamercolor{palette primary}{
  fg=pkuredblack,
  bg=gray!20
}
\setbeamercolor{palette secondary}{
  fg=pkuredblack,
  bg=pkuredgray!25
}
\setbeamercolor{palette tertiary}{
  fg=gray!10,
  bg=pkured
}
\setbeamercolor{palette quaternary}{
  fg=gray!10,
  bg=pkured!80!orange
}

\setbeamercolor{titlelike}{
  parent=palette quaternary
}

\setbeamercolor{frametitle}{
  fg=gray!10
}

\setbeamercolor{block title}{
  fg=gray!10,
  bg=pkured
}
\setbeamercolor{block title alerted}{
  use=alerted text,
  fg=gray!10,
  bg=nonpkugreen!75!bg
}
\setbeamercolor{block title example}{
  use=example text,
  fg=gray!10,
  bg=nonpkublue!75!bg
}

\setbeamercolor{block body}{
  parent=normal text,
  use=block title,
  bg=block title.bg!25!bg
}
\setbeamercolor{block body alerted}{
  parent=normal text,
  use=block title alerted,
  bg=block title alerted.bg!25!bg
}
\setbeamercolor{block body example}{
  parent=normal text,
  use=block title example,
  bg=block title example.bg!25!bg
}

\setbeamercolor{sidebar}{
  bg=pkured!90
}

\setbeamercolor{palette sidebar primary}{
  fg=gray!10
}
\setbeamercolor{palette sidebar secondary}{
  fg=pkured!20
}
\setbeamercolor{palette sidebar tertiary}{
  fg=pkured!20
}
\setbeamercolor{palette sidebar quaternary}{
  fg=gray!10
}

\setbeamercolor*{separation line}{}
\setbeamercolor*{fine separation line}{}

%    \end{macrocode}
%
% Set fonts.
%    \begin{macrocode}
\usefonttheme{professionalfonts}

%    \end{macrocode}
%
% Slide quoting utilities. General usage is
%\begin{verbatim}
%\includepdf[pagecommand=\footquote{\footnotesize Authorship}, pages=1, scale=0.8]{Source.pdf}
%\end{verbatim}
%    \begin{macrocode}
\newenvironment{quoteslide}
{%
\setbeamercolor{background canvas}{bg=}%
\setbeamertemplate{headline}{}%
\setbeamertemplate{footlines}[infolines theme]%
}
{}

%    \end{macrocode}
%
% \DescribeMacro{\footquote}
% Insert a \verb"parbox" with appropriate width in order to typeset
% bibliographical information in place. Best used with \verb"\footnotesize"
%    \begin{macrocode}
\newcommand\footquote[1]{{%
  \quitvmode\vskip\stretch{1}\parbox{0.9\paperwidth}{#1}%
  \global\setcounter{framenumber}{\value{page}}%
}}

%    \end{macrocode}
%
% \DescribeMacro{\balancefootquote}
% Balance the \verb"footquote" by inserting a $-1.5$ stretch, which vanish the
% stretch on the bottom experimentally. Originlly designed for using
% \verb"\footquote" outside \verb"\includepdf" frames.
%    \begin{macrocode}
\newcommand\balancefootquote{\vskip\stretch{-1.5}}

%    \end{macrocode}
%
% Guard.
%    \begin{macrocode}
%</pslide>
%    \end{macrocode}
%
% \StopEventually{^^A
%   \PrintChanges
%   \PrintIndex
% }
%
% \Finale
